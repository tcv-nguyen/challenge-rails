diff --git .gitignore .gitignore
index d1050c4..eb6c244 100644
--- .gitignore
+++ .gitignore
@@ -29,6 +29,7 @@ db/*.sqlite3
 .sass-cache
 /config/config.yml
 /config/database.yml
+/config/stripe.yml
 /coverage.data
 /coverage/
 /db/*.javadb/
diff --git Gemfile Gemfile
index 669a714..9571558 100644
--- Gemfile
+++ Gemfile
@@ -7,6 +7,8 @@ gem 'uglifier', '>= 1.3.0'
 gem 'coffee-rails', '~> 4.1.0'
 gem 'jquery-rails'
 gem 'jbuilder', '~> 2.0'
+gem 'stripe', :git => 'https://github.com/stripe/stripe-ruby'
+gem 'stripe-ruby-mock'
 
 gem 'therubyracer'
 
@@ -30,4 +32,5 @@ group :development, :test do
   gem 'byebug'
   gem 'web-console', '~> 2.0'
   gem 'spring'
+  gem 'pry'
 end
\ No newline at end of file
diff --git Gemfile.lock Gemfile.lock
index c94b7c1..9741f2a 100644
--- Gemfile.lock
+++ Gemfile.lock
@@ -1,3 +1,12 @@
+GIT
+  remote: https://github.com/stripe/stripe-ruby
+  revision: 085ad6cfb303f9e470d161f1b62370e746702432
+  specs:
+    stripe (1.18.0)
+      json (~> 1.8.1)
+      mime-types (>= 1.25, < 3.0)
+      rest-client (~> 1.4)
+
 GEM
   remote: https://rubygems.org/
   specs:
@@ -40,6 +49,7 @@ GEM
     arel (6.0.0)
     binding_of_caller (0.7.2)
       debug_inspector (>= 0.0.1)
+    blankslate (3.1.3)
     builder (3.2.2)
     byebug (3.5.1)
       columnize (~> 0.8)
@@ -53,6 +63,7 @@ GEM
       xpath (~> 2.0)
     childprocess (0.5.5)
       ffi (~> 1.0, >= 1.0.11)
+    coderay (1.1.0)
     coffee-rails (4.1.0)
       coffee-script (>= 2.2.0)
       railties (>= 4.0.0, < 5.0)
@@ -62,6 +73,7 @@ GEM
     coffee-script-source (1.8.0)
     columnize (0.9.0)
     daemons (1.1.9)
+    dante (0.2.0)
     database_cleaner (1.4.0)
     debug_inspector (0.0.2)
     debugger-linecache (1.2.0)
@@ -84,6 +96,11 @@ GEM
     jbuilder (2.2.6)
       activesupport (>= 3.0.0, < 5)
       multi_json (~> 1.2)
+    jimson-temp (0.9.5)
+      blankslate (>= 3.1.2)
+      multi_json (~> 1.0)
+      rack (~> 1.4)
+      rest-client (~> 1.0)
     jquery-rails (4.0.3)
       rails-dom-testing (~> 1.0)
       railties (>= 4.2.0)
@@ -96,12 +113,18 @@ GEM
       nokogiri (>= 1.5.9)
     mail (2.6.3)
       mime-types (>= 1.16, < 3)
+    method_source (0.8.2)
     mime-types (2.4.3)
     mini_portile (0.6.2)
     minitest (5.5.0)
     multi_json (1.10.1)
+    netrc (0.10.2)
     nokogiri (1.6.5)
       mini_portile (~> 0.6.0)
+    pry (0.10.1)
+      coderay (~> 1.1.0)
+      method_source (~> 0.8.1)
+      slop (~> 3.4)
     rack (1.6.0)
     rack-test (0.6.2)
       rack (>= 1.0)
@@ -132,6 +155,9 @@ GEM
       thor (>= 0.18.1, < 2.0)
     rake (10.4.2)
     ref (1.0.5)
+    rest-client (1.7.2)
+      mime-types (>= 1.16, < 3.0)
+      netrc (~> 0.7)
     rspec-core (3.1.7)
       rspec-support (~> 3.1.0)
     rspec-expectations (3.1.2)
@@ -175,6 +201,10 @@ GEM
       activesupport (>= 3.0)
       sprockets (>= 2.8, < 4.0)
     sqlite3 (1.3.10)
+    stripe-ruby-mock (2.0.1)
+      dante (>= 0.2.0)
+      jimson-temp
+      stripe (>= 1.15.0)
     therubyracer (0.12.1)
       libv8 (~> 3.16.14.0)
       ref
@@ -212,6 +242,7 @@ DEPENDENCIES
   jbuilder (~> 2.0)
   jquery-rails
   launchy
+  pry
   rails (= 4.2.0)
   rails_layout
   rspec-rails
@@ -220,6 +251,8 @@ DEPENDENCIES
   spring
   spring-commands-rspec
   sqlite3
+  stripe!
+  stripe-ruby-mock
   therubyracer
   thin
   uglifier (>= 1.3.0)
diff --git app/models/customer.rb app/models/customer.rb
index 98a0fef..540f6b3 100644
--- app/models/customer.rb
+++ app/models/customer.rb
@@ -1,4 +1,8 @@
 class Customer < ActiveRecord::Base
+  include HasStripe
+
   validates :name, presence: true
   validates :email, presence: true
-end
\ No newline at end of file
+
+  has_stripe :stripe_id
+end
diff --git db/schema.rb db/schema.rb
index d9e15eb..9be9c66 100644
--- db/schema.rb
+++ db/schema.rb
@@ -11,13 +11,14 @@
 #
 # It's strongly recommended that you check this file into your version control system.
 
-ActiveRecord::Schema.define(version: 20150204000343) do
+ActiveRecord::Schema.define(version: 20150206025626) do
 
   create_table "customers", force: :cascade do |t|
     t.string   "name"
     t.string   "email"
     t.datetime "created_at", null: false
     t.datetime "updated_at", null: false
+    t.string   "stripe_id"
   end
 
 end
diff --git spec/models/customer_spec.rb spec/models/customer_spec.rb
index ba99954..b48cf19 100644
--- spec/models/customer_spec.rb
+++ spec/models/customer_spec.rb
@@ -1,4 +1,65 @@
 require 'rails_helper'
+require 'stripe_mock'
 
 RSpec.describe Customer, :type => :model do
+  let(:stripe_helper) { StripeMock.create_test_helper }
+  let(:customer)      { FactoryGirl.create(:customer) }
+
+  before { StripeMock.start }
+  after { StripeMock.stop }
+
+  describe "#add_card" do
+    it "creates Stripe customer if none exist" do
+      card = customer.add_card(stripe_helper.generate_card_token)
+
+      expect(card.customer).to eq(customer.stripe_id)
+    end
+  end
+
+  describe "#update_card" do
+    it "updates Stripe card number" do
+      new_number = "1111111111111111"
+      old_card = customer.add_card(stripe_helper.generate_card_token)
+
+      customer.update_card(card_id: old_card.id, number: new_number)
+
+      new_card = customer.get_stripe_account.cards.retrieve(old_card.id)
+
+      expect(new_card.number).to eq(new_number)
+    end
+  end
+
+  describe "#remove_card" do
+    it "removes Customer card" do
+      card = customer.add_card(stripe_helper.generate_card_token)
+
+      expect(customer.get_stripe_account.cards.data.count).to eq(1)
+
+      customer.remove_card(card.id)
+
+      expect(customer.get_stripe_account.cards.data.count).to eq(0)
+    end
+  end
+
+  describe "#charge_card" do
+    before do
+      @owned_card = customer.add_card(stripe_helper.generate_card_token)
+
+      new_customer = FactoryGirl.create(:customer)
+      @new_card = new_customer.add_card(stripe_helper.generate_card_token)
+    end
+
+    it "charges Customer if the Customer has card" do
+      charge = customer.charge_card(amount: 2, card_id: @owned_card.id)
+
+      expect(charge.amount).to eq(2)
+      expect(charge.currency).to eq("usd")
+    end
+
+    it "does not charge Customer if the Customer does not own that card" do
+      charge = customer.charge_card(amount: 2, card_id: @new_card.id)
+
+      expect(charge).to be_nil
+    end
+  end
 end
